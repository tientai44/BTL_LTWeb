@model NotUseAuto.Models.WaitCategory

@{
    ViewData["Title"] = "Create";
}

@if (User.Identity.IsAuthenticated && User.IsInRole("Owner"))
{
    <h1>Create</h1>

    <h4>Category</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-controller="Category" asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">

                    <input asp-for="Status" type="hidden" value="Pending" class="form-control" />
                    <span asp-validation-for="Status" class="text-danger"></span>

                </div>
                <div>
                    <br>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
    <br>
    <div>
        <a asp-action="Index">Back to List</a>
    </div>

}



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }

    @*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
    @{
}
